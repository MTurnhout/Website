{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/abstraction/api-service.ts","./src/app/core/abstraction/index.ts","./src/app/core/interceptors/json-date-http-interceptor.ts","./src/app/core/local-storage-keys.ts","./src/app/core/local-storage/index.ts","./src/app/core/local-storage/local-storage.service.ts","./src/app/core/security/directives/has-claim.directive.ts","./src/app/core/security/enums/application-claim-type.enum.ts","./src/app/core/security/enums/authentication-type.enum.ts","./src/app/core/security/guards/authentication.guard.ts","./src/app/core/security/index.ts","./src/app/core/security/interceptors/jwt.interceptor.ts","./src/app/core/security/interceptors/unauthorized-error.interceptor.ts","./src/app/core/security/models/application-user.model.ts","./src/app/core/security/models/user-credentials.model.ts","./src/app/core/security/services/azure-ad-authentication.service.ts","./src/app/core/security/services/security.service.ts","./src/app/core/toast/index.ts","./src/app/core/toast/toast.service.ts","./src/app/core/toast/toasts-container.component.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ApplicationClaimType, AuthenticationGuard } from \"@core/security\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/blog\", pathMatch: \"full\" },\r\n  {\r\n    path: \"blog\",\r\n    loadChildren: () =>\r\n      import(\"./pages/blog/blog.module\").then(mod => mod.BlogModule),\r\n    data: { title: \"Blog\" }\r\n  },\r\n  {\r\n    path: \"login\",\r\n    loadChildren: () =>\r\n      import(\"./pages/login/login.module\").then(mod => mod.LoginModule),\r\n    data: { title: \"Login\" }\r\n  },\r\n  {\r\n    path: \"admin\",\r\n    loadChildren: () =>\r\n      import(\"./pages/admin/admin.module\").then(mod => mod.AdminModule),\r\n    canActivate: [AuthenticationGuard],\r\n    data: { claimType: ApplicationClaimType.CanViewAdminPage, title: \"Admin\" }\r\n  },\r\n  { path: \"**\", redirectTo: \"/blog\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport {\r\n  ApplicationClaimType,\r\n  ApplicationUserModel,\r\n  SecurityService\r\n} from \"@core/security\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\nexport class AppComponent {\r\n  public title = \"MT\";\r\n  public isCollapsed = true;\r\n  public applicationUser: ApplicationUserModel;\r\n\r\n  public ApplicationClaimType = ApplicationClaimType;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private securityService: SecurityService\r\n  ) {\r\n    this.applicationUser = securityService.applicationUser;\r\n  }\r\n\r\n  public logout(event: MouseEvent) {\r\n    this.securityService.logout();\r\n    this.router.navigate([\"/\"]);\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  public toggleNavigationBar() {\r\n    this.isCollapsed = !this.isCollapsed;\r\n  }\r\n\r\n  public collapseNavigationBar() {\r\n    this.isCollapsed = true;\r\n  }\r\n}\r\n","<header class=\"sticky-top bg-dark\">\r\n  <div class=\"container\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark\">\r\n      <a class=\"navbar-brand\" routerLink=\"/blog\">{{ title }}</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        (click)=\"toggleNavigationBar()\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        [attr.aria-expanded]=\"!isCollapsed\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        class=\"collapse navbar-collapse justify-content-center\"\r\n        id=\"navbarNavAltMarkup\"\r\n        [ngbCollapse]=\"isCollapsed\"\r\n      >\r\n        <div class=\"navbar-nav\">\r\n          <a\r\n            class=\"nav-item nav-link\"\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/blog\"\r\n            (click)=\"collapseNavigationBar()\"\r\n            >Blog</a\r\n          >\r\n        </div>\r\n        <div class=\"navbar-nav ml-auto\">\r\n          <a\r\n            *appHasClaim=\"ApplicationClaimType.CanViewAdminPage\"\r\n            class=\"nav-item nav-link\"\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/admin\"\r\n            (click)=\"collapseNavigationBar()\"\r\n            >Admin</a\r\n          >\r\n          <a\r\n            *ngIf=\"!applicationUser.isAuthenticated\"\r\n            class=\"nav-item nav-link\"\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/login\"\r\n            (click)=\"collapseNavigationBar()\"\r\n            >Login</a\r\n          >\r\n          <a\r\n            *ngIf=\"applicationUser.isAuthenticated\"\r\n            class=\"nav-item nav-link\"\r\n            href=\"logout\"\r\n            (click)=\"logout($event); collapseNavigationBar()\"\r\n            >Logout</a\r\n          >\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</header>\r\n\r\n<main class=\"container mt-3\">\r\n  <router-outlet></router-outlet>\r\n</main>\r\n\r\n<app-toasts-container></app-toasts-container>\r\n","import { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\r\nimport { APP_INITIALIZER, NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { JsonDateHttpInterceptor } from \"@core/interceptors/json-date-http-interceptor\";\r\nimport {\r\n  JwtInterceptor,\r\n  SecurityService,\r\n  UnauthorizedErrorInterceptor\r\n} from \"@core/security\";\r\nimport { ToastsContainerComponent } from \"@core/toast\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HasClaimDirective } from \"./core/security/directives/has-claim.directive\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, ToastsContainerComponent, HasClaimDirective],\r\n  imports: [NgbModule, BrowserModule, AppRoutingModule, HttpClientModule],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: loadCurrentUser,\r\n      deps: [SecurityService],\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JsonDateHttpInterceptor,\r\n      multi: true\r\n    },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UnauthorizedErrorInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n\r\nexport function loadCurrentUser(securityService: SecurityService) {\r\n  return () => securityService.restoreSession();\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"@environments/environment\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\nexport abstract class ApiService {\r\n  protected actionUrl: string;\r\n\r\n  constructor(private http: HttpClient, actionUrl: string) {\r\n    this.actionUrl = `${environment.apiUrl}/${actionUrl}`;\r\n    this.validateApiUrl(this.actionUrl);\r\n  }\r\n\r\n  protected get<T>(alternativeUrl: string = null): Observable<T> {\r\n    if (alternativeUrl) {\r\n      this.validateApiUrl(alternativeUrl);\r\n    }\r\n\r\n    let url = this.actionUrl;\r\n    if (alternativeUrl) {\r\n      url += alternativeUrl;\r\n    }\r\n\r\n    return this.http.get<T>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  protected post<T>(model: any, alternativeUrl: string = null): Observable<T> {\r\n    if (alternativeUrl) {\r\n      this.validateApiUrl(alternativeUrl);\r\n    }\r\n\r\n    let url = this.actionUrl;\r\n    if (alternativeUrl) {\r\n      url += alternativeUrl;\r\n    }\r\n\r\n    return this.http.post<T>(url, model).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  protected put(model: any, alternativeUrl: string = null): Observable<never> {\r\n    if (alternativeUrl) {\r\n      this.validateApiUrl(alternativeUrl);\r\n    }\r\n\r\n    let url = this.actionUrl;\r\n    if (alternativeUrl) {\r\n      url += alternativeUrl;\r\n    }\r\n\r\n    return this.http.put<never>(url, model).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  protected delete(alternativeUrl: string = null): Observable<never> {\r\n    if (alternativeUrl) {\r\n      this.validateApiUrl(alternativeUrl);\r\n    }\r\n\r\n    let url = this.actionUrl;\r\n    if (alternativeUrl) {\r\n      url += alternativeUrl;\r\n    }\r\n\r\n    return this.http.delete<never>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private validateApiUrl(url: string): void {\r\n    if (url.endsWith(\"/\")) {\r\n      throw new Error(\"API url may not end with '/'\");\r\n    }\r\n  }\r\n\r\n  private handleError(error: any): Observable<never> {\r\n    let errorMessage = \"Server error\";\r\n    if (error) {\r\n      if (error.message) {\r\n        errorMessage = error.message;\r\n      } else if (error.status) {\r\n        errorMessage = `${error.status} - ${error.statusText}`;\r\n      }\r\n    }\r\n\r\n    // tslint:disable-next-line: no-console\r\n    console.error(errorMessage);\r\n    return throwError(error);\r\n  }\r\n}\r\n","export * from \"./api-service\";\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class JsonDateHttpInterceptor implements HttpInterceptor {\r\n  private iso8601: RegExp = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/;\r\n\r\n  public intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      tap((event: HttpEvent<any>) => {\r\n        if (event instanceof HttpResponse) {\r\n          this.convertToDate(event.body);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  public convertToDate(body: any) {\r\n    // Ability to configure HttpClient JSON.parse reviver would be nice\r\n    if (body === null || body === undefined || typeof body !== \"object\") {\r\n      return body;\r\n    }\r\n\r\n    for (const key of Object.keys(body)) {\r\n      const value = body[key];\r\n      if (!value) {\r\n        continue;\r\n      } else if (typeof value === \"object\") {\r\n        this.convertToDate(value);\r\n      } else if (typeof value === \"string\" && this.iso8601.test(value)) {\r\n        body[key] = new Date(value);\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class LocalStorageKeys {\r\n  public static readonly AccessToken = \"website_access_token\";\r\n  public static readonly AuthenticationType = \"website_authentication_type\";\r\n}\r\n","export * from \"./local-storage.service\";\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class LocalStorageService {\r\n  private static readonly userKeysKey: string = \"UserKeys\";\r\n\r\n  private readonly userKeys: string[];\r\n\r\n  constructor() {\r\n    this.userKeys = this._getItem<string[]>(LocalStorageService.userKeysKey);\r\n    if (!this.userKeys) {\r\n      this.userKeys = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve value from local storage\r\n   * Will return null if there is no value\r\n   */\r\n  public getItem<T>(key: string): T {\r\n    return this._getItem<T>(key);\r\n  }\r\n\r\n  /**\r\n   * Add value to local storage\r\n   */\r\n  public setItem(key: string, value: any) {\r\n    this._setItem(key, value);\r\n  }\r\n\r\n  /**\r\n   * Remove item from local storage\r\n   */\r\n  public removeItem(key: string) {\r\n    const userKeyIndex = this.userKeys.indexOf(key);\r\n    if (userKeyIndex >= 0) {\r\n      this.userKeys.splice(userKeyIndex, 1);\r\n      this._storeUserKeys();\r\n    }\r\n\r\n    this._removeItem(key);\r\n  }\r\n\r\n  /**\r\n   * Add user item to local storage\r\n   * User items will be cleared when another user uses the same browser cache\r\n   */\r\n  public setUserItem(key: string, value: any) {\r\n    if (this.userKeys.indexOf(key) < 0) {\r\n      this.userKeys.push(key);\r\n      this._storeUserKeys();\r\n    }\r\n\r\n    this._setItem(key, value);\r\n  }\r\n\r\n  /**\r\n   * Clears all stored user items\r\n   */\r\n  public clearUserItems() {\r\n    while (this.userKeys.length > 0) {\r\n      const key = this.userKeys.pop();\r\n      this._removeItem(key);\r\n    }\r\n\r\n    this._storeUserKeys();\r\n  }\r\n\r\n  private _getItem<T>(key: string): T {\r\n    const value = localStorage.getItem(key);\r\n\r\n    return value ? JSON.parse(value) : null;\r\n  }\r\n\r\n  private _setItem(key: string, value: any) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  private _removeItem(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  private _storeUserKeys() {\r\n    this._setItem(LocalStorageService.userKeysKey, this.userKeys);\r\n  }\r\n}\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\r\nimport { ApplicationClaimType } from \"../enums/application-claim-type.enum\";\r\nimport { SecurityService } from \"../services/security.service\";\r\n\r\n@Directive({\r\n  selector: \"[appHasClaim]\"\r\n})\r\nexport class HasClaimDirective {\r\n  private claimTypes: ApplicationClaimType[];\r\n\r\n  @Input()\r\n  public set appHasClaim(\r\n    claimType: ApplicationClaimType | ApplicationClaimType[]\r\n  ) {\r\n    this.claimTypes = Array.isArray(claimType) ? claimType : [claimType];\r\n    this.validateClaim();\r\n  }\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    private securityService: SecurityService\r\n  ) {\r\n    securityService.applicationUserChanged.subscribe(() =>\r\n      this.validateClaim()\r\n    );\r\n  }\r\n\r\n  private validateClaim() {\r\n    if (this.securityService.hasClaim(this.claimTypes)) {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n}\r\n","export enum ApplicationClaimType {\r\n  CanViewAdminPage = 1,\r\n  CanAddBlogPost,\r\n  CanUpdateBlogPost,\r\n  CanDeleteBlogPost\r\n}\r\n","export enum AuthenticationType {\r\n  Default,\r\n  AzureAd\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from \"@angular/router\";\r\nimport { ToastService } from \"@core/toast\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SecurityService } from \"../services/security.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private securityService: SecurityService,\r\n    private toastService: ToastService\r\n  ) {}\r\n\r\n  public canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    const claimType = next.data.claimType;\r\n\r\n    const applicationUser = this.securityService.applicationUser;\r\n    if (\r\n      applicationUser.isAuthenticated &&\r\n      (!claimType || this.securityService.hasClaim(claimType))\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    if (applicationUser.isAuthenticated) {\r\n      this.toastService.showWarning(\"Not authorized to view this page!\");\r\n    } else {\r\n      this.router.navigate([\"/login\"], {\r\n        queryParams: { returnUrl: state.url }\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","export * from \"./enums/application-claim-type.enum\";\r\nexport * from \"./guards/authentication.guard\";\r\nexport * from \"./interceptors/jwt.interceptor\";\r\nexport * from \"./interceptors/unauthorized-error.interceptor\";\r\nexport * from \"./models/application-user.model\";\r\nexport * from \"./models/user-credentials.model\";\r\nexport * from \"./services/security.service\";\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SecurityService } from \"../services/security.service\";\r\n\r\n/**\r\n * Add authorization header with jwt token if available\r\n */\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private securityService: SecurityService) {}\r\n\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const accessToken = this.securityService.getAccessToken();\r\n    if (accessToken) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${accessToken}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { SecurityService } from \"../services/security.service\";\r\n\r\n/**\r\n * Logout if 401 response returned from API\r\n */\r\n@Injectable()\r\nexport class UnauthorizedErrorInterceptor implements HttpInterceptor {\r\n  constructor(private securityService: SecurityService) {}\r\n\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError(err => {\r\n        if (err.status === 401) {\r\n          this.securityService.logout();\r\n          location.reload();\r\n        }\r\n\r\n        let error: string;\r\n        if (err.error && err.error.message) {\r\n          error = err.error.message;\r\n        } else {\r\n          error = err.statusText;\r\n        }\r\n\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ApplicationClaimType } from \"../enums/application-claim-type.enum\";\r\n\r\nexport class ApplicationUserModel {\r\n  public isAuthenticated = false;\r\n  public bearerToken: string = null;\r\n\r\n  public userName: string = null;\r\n  public firstName: string = null;\r\n  public lastName: string = null;\r\n  public email: string = null;\r\n\r\n  public claims: ApplicationClaimType[] = [];\r\n}\r\n","export class UserCredentialsModel {\r\n  public email: string;\r\n  public password: string;\r\n  public recaptcha: string;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"@environments/environment\";\r\nimport {\r\n  User,\r\n  UserManager,\r\n  UserManagerSettings,\r\n  WebStorageStateStore\r\n} from \"oidc-client\";\r\nimport { ExternalAuthentication } from \"../interfaces/external-authentication\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AzureAdAuthenticationService implements ExternalAuthentication {\r\n  private userManager: UserManager;\r\n  private userPromise: Promise<User>;\r\n  private user: User;\r\n\r\n  constructor() {\r\n    if (!environment.azureAdSettings.enabled) {\r\n      return;\r\n    }\r\n\r\n    const azureAdSettings = environment.azureAdSettings;\r\n    const config: UserManagerSettings = {\r\n      authority: `https://sts.windows.net/${azureAdSettings.tenantId}`,\r\n      client_id: azureAdSettings.clientId,\r\n      redirect_uri: `${environment.clientUrl}/assets/oidc-login-redirect.html`,\r\n      scope: `openid api://${azureAdSettings.webApiId}/api-access profile`,\r\n      response_type: \"id_token token\",\r\n      post_logout_redirect_uri: environment.clientUrl,\r\n      extraQueryParams: { resource: azureAdSettings.webApiId },\r\n      loadUserInfo: false,\r\n      userStore: new WebStorageStateStore({ store: window.localStorage })\r\n    };\r\n\r\n    this.userManager = new UserManager(config);\r\n    this.userPromise = this.loadUser();\r\n\r\n    this.userManager.events.addUserLoaded(args => {\r\n      this.loadUser();\r\n    });\r\n  }\r\n\r\n  public awaitInitialization(): Promise<any> {\r\n    return this.userPromise;\r\n  }\r\n\r\n  public login(): Promise<User> {\r\n    return this.userManager.signinPopup();\r\n  }\r\n\r\n  public logout(): Promise<any> {\r\n    return this.userManager.signoutRedirect();\r\n  }\r\n\r\n  public getAccessToken(): string {\r\n    return this.user ? this.user.access_token : null;\r\n  }\r\n\r\n  private async loadUser(): Promise<User> {\r\n    return this.userManager.getUser().then(user => {\r\n      if (user && !user.expired) {\r\n        this.user = user;\r\n      }\r\n\r\n      return user;\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { ApiService } from \"@core/abstraction\";\r\nimport { LocalStorageService } from \"@core/local-storage\";\r\nimport { LocalStorageKeys } from \"@core/local-storage-keys\";\r\nimport { environment } from \"@environments/environment.prod\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { ApplicationClaimType } from \"../enums/application-claim-type.enum\";\r\nimport { AuthenticationType } from \"../enums/authentication-type.enum\";\r\nimport { ExternalAuthentication } from \"../interfaces/external-authentication\";\r\nimport { ApplicationUserModel } from \"../models/application-user.model\";\r\nimport { UserCredentialsModel } from \"../models/user-credentials.model\";\r\nimport { AzureAdAuthenticationService } from \"./azure-ad-authentication.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class SecurityService extends ApiService {\r\n  public applicationUser = new ApplicationUserModel();\r\n  public applicationUserChanged = new EventEmitter<ApplicationUserModel>();\r\n\r\n  constructor(\r\n    http: HttpClient,\r\n    private localStorage: LocalStorageService,\r\n    private azureAdAuthenticationService: AzureAdAuthenticationService\r\n  ) {\r\n    super(http, \"users\");\r\n  }\r\n\r\n  public login(\r\n    userCredentials: UserCredentialsModel\r\n  ): Observable<ApplicationUserModel> {\r\n    this.setAuthenticationType(AuthenticationType.Default);\r\n    return this.post<ApplicationUserModel>(\r\n      userCredentials,\r\n      \"/authenticate\"\r\n    ).pipe(\r\n      map(user => {\r\n        this.localStorage.setUserItem(\r\n          LocalStorageKeys.AccessToken,\r\n          user.bearerToken\r\n        );\r\n        this.updateUser(user);\r\n\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  public externalLogin(authenticationType: AuthenticationType): Promise<any> {\r\n    this.setAuthenticationType(authenticationType);\r\n    const authenticationService = this.getExternalAuthentication();\r\n    if (authenticationService) {\r\n      return authenticationService.login().then(() => {\r\n        this.loadCurrentUser();\r\n      });\r\n    }\r\n  }\r\n\r\n  public logout() {\r\n    const authenticationService = this.getExternalAuthentication();\r\n    if (authenticationService) {\r\n      authenticationService.logout();\r\n    }\r\n\r\n    this.localStorage.clearUserItems();\r\n    this.updateUser(new ApplicationUserModel());\r\n  }\r\n\r\n  public hasClaim(claim: ApplicationClaimType | ApplicationClaimType[]) {\r\n    if (Array.isArray(claim)) {\r\n      return this.applicationUser.claims.some(c => claim.includes(c));\r\n    } else {\r\n      return this.applicationUser.claims.includes(claim);\r\n    }\r\n  }\r\n\r\n  public async restoreSession(): Promise<ApplicationUserModel> {\r\n    let accessToken = null;\r\n\r\n    const authenticationService = this.getExternalAuthentication();\r\n    if (authenticationService) {\r\n      await authenticationService.awaitInitialization();\r\n      accessToken = authenticationService.getAccessToken();\r\n    } else {\r\n      accessToken = this.getAccessToken();\r\n    }\r\n\r\n    if (!accessToken) {\r\n      return of(null).toPromise();\r\n    }\r\n\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  public getAccessToken(): string {\r\n    const authenticationService = this.getExternalAuthentication();\r\n    if (authenticationService) {\r\n      return authenticationService.getAccessToken();\r\n    }\r\n\r\n    return this.applicationUser.bearerToken\r\n      ? this.applicationUser.bearerToken\r\n      : this.localStorage.getItem(LocalStorageKeys.AccessToken);\r\n  }\r\n\r\n  private updateUser(applicationUser: ApplicationUserModel) {\r\n    Object.assign(this.applicationUser, applicationUser);\r\n    this.applicationUserChanged.emit(this.applicationUser);\r\n  }\r\n\r\n  private loadCurrentUser(): Promise<ApplicationUserModel> {\r\n    return this.get<ApplicationUserModel>(\"/current\")\r\n      .pipe(\r\n        map(applicationUser => {\r\n          if (applicationUser) {\r\n            this.updateUser(applicationUser);\r\n          } else {\r\n            this.logout();\r\n          }\r\n\r\n          return this.applicationUser;\r\n        })\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  private getExternalAuthentication(): ExternalAuthentication {\r\n    const authenticationType = this.getAuthenticationType();\r\n    switch (authenticationType) {\r\n      case AuthenticationType.AzureAd: {\r\n        return environment.azureAdSettings.enabled\r\n          ? this.azureAdAuthenticationService\r\n          : null;\r\n      }\r\n      default: {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  private getAuthenticationType(): AuthenticationType {\r\n    let authenticationType = this.localStorage.getItem<AuthenticationType>(\r\n      LocalStorageKeys.AuthenticationType\r\n    );\r\n    if (!authenticationType) {\r\n      authenticationType = AuthenticationType.Default;\r\n    }\r\n\r\n    return authenticationType;\r\n  }\r\n\r\n  private setAuthenticationType(authenticationType: AuthenticationType) {\r\n    this.localStorage.setUserItem(\r\n      LocalStorageKeys.AuthenticationType,\r\n      authenticationType\r\n    );\r\n  }\r\n}\r\n","export * from \"./toast.service\";\r\nexport * from \"./toasts-container.component\";\r\n","import { Injectable, TemplateRef } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ToastService {\r\n  public toasts: any[] = [];\r\n\r\n  public show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.showToast(textOrTpl, options);\r\n  }\r\n\r\n  public showSuccess(message: string) {\r\n    this.showToast(message, { classname: \"bg-success text-light\" });\r\n  }\r\n\r\n  public showWarning(message: string) {\r\n    this.showToast(message, { classname: \"bg-warning text-dark\" });\r\n  }\r\n\r\n  public showError(message: string) {\r\n    this.showToast(message, { classname: \"bg-danger text-light\" });\r\n  }\r\n\r\n  public remove(toast: any) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n\r\n  private showToast(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.toasts.push({ textOrTpl, autoHide: true, ...options });\r\n  }\r\n}\r\n","import { Component, TemplateRef } from \"@angular/core\";\r\nimport { ToastService } from \"./toast.service\";\r\n\r\n@Component({\r\n  selector: \"app-toasts-container\",\r\n  template: `\r\n    <div class=\"ngb-toasts\" style=\"margin-top: 70px;\">\r\n      <ngb-toast\r\n        *ngFor=\"let toast of toastService.toasts\"\r\n        [class]=\"toast.classname\"\r\n        style=\"cursor: pointer;\"\r\n        [autohide]=\"toast.autoHide\"\r\n        (mouseenter)=\"toast.autoHide = false\"\r\n        (mouseleave)=\"toast.autoHide = true\"\r\n        (click)=\"toast.autoHide = false; toastService.remove(toast)\"\r\n        [delay]=\"toast.delay || 5000\"\r\n        (hide)=\"toastService.remove(toast)\"\r\n      >\r\n        <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\r\n          <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\r\n        </ng-template>\r\n\r\n        <ng-template #text>{{ toast.textOrTpl }}</ng-template>\r\n      </ngb-toast>\r\n    </div>\r\n  `\r\n})\r\nexport class ToastsContainerComponent {\r\n  constructor(public toastService: ToastService) {}\r\n\r\n  public isTemplate(toast: any) {\r\n    return toast.textOrTpl instanceof TemplateRef;\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  clientUrl: \"https://martijnturnhout.com\",\r\n  apiUrl: \"/api\",\r\n  recaptchaSiteKey: \"6LeOaq0UAAAAAFm6THEVZTNUk6MU76mVA59F9Yj_\",\r\n  azureAdSettings: {\r\n    enabled: true,\r\n    tenantId: \"bfc60a20-4601-4b3b-aa55-2ba676b14976\",\r\n    clientId: \"ba0156a1-daaa-4b6d-990a-a73283a95a4a\",\r\n    webApiId: \"0be261fe-0e96-4163-b07d-fbac0059c339\"\r\n  },\r\n  applicationInsights: {\r\n    instrumentationKey: \"850af97e-3c89-4da4-aee3-79bfa6cb9a8c\"\r\n  }\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  clientUrl: \"http://localhost:4200\",\r\n  apiUrl: \"/api\",\r\n  recaptchaSiteKey: \"6LdLprcUAAAAABxlfA223kbR2lhoAqTKKXyDjMdS\",\r\n  azureAdSettings: {\r\n    enabled: true,\r\n    // Directory id\r\n    tenantId: \"bfc60a20-4601-4b3b-aa55-2ba676b14976\",\r\n    // App registration id of client\r\n    clientId: \"ba0156a1-daaa-4b6d-990a-a73283a95a4a\",\r\n    // App registration id of web api\r\n    webApiId: \"0be261fe-0e96-4163-b07d-fbac0059c339\"\r\n  },\r\n  applicationInsights: {\r\n    instrumentationKey: \"850af97e-3c89-4da4-aee3-79bfa6cb9a8c\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => {\r\n    // tslint:disable-next-line: no-console\r\n    console.error(err);\r\n  });\r\n"],"sourceRoot":"webpack:///"}