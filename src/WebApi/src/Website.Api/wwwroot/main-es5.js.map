{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app-routing.module.ts","src/app/app.component.ts","src/app/app.component.html","src/app/app.module.ts","src/app/core/abstraction/api-service.ts","src/app/core/abstraction/index.ts","src/app/core/interceptors/json-date-http-interceptor.ts","src/app/core/local-storage-keys.ts","src/app/core/local-storage/index.ts","src/app/core/local-storage/local-storage.service.ts","src/app/core/security/directives/has-claim.directive.ts","src/app/core/security/enums/application-claim-type.enum.ts","src/app/core/security/enums/authentication-type.enum.ts","src/app/core/security/guards/authentication.guard.ts","src/app/core/security/index.ts","src/app/core/security/interceptors/jwt.interceptor.ts","src/app/core/security/interceptors/unauthorized-error.interceptor.ts","src/app/core/security/models/application-user.model.ts","src/app/core/security/models/user-credentials.model.ts","src/app/core/security/services/azure-ad-authentication.service.ts","src/app/core/security/services/security.service.ts","src/app/core/toast/index.ts","src/app/core/toast/toast.service.ts","src/app/core/toast/toasts-container.component.ts","src/environments/environment.prod.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ApplicationClaimType, AuthenticationGuard } from \"@core/security\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/blog\", pathMatch: \"full\" },\r\n  {\r\n    path: \"blog\",\r\n    loadChildren: () =>\r\n      import(\"./pages/blog/blog.module\").then(mod => mod.BlogModule),\r\n    data: { title: \"Blog\" }\r\n  },\r\n  {\r\n    path: \"login\",\r\n    loadChildren: () =>\r\n      import(\"./pages/login/login.module\").then(mod => mod.LoginModule),\r\n    data: { title: \"Login\" }\r\n  },\r\n  {\r\n    path: \"admin\",\r\n    loadChildren: () =>\r\n      import(\"./pages/admin/admin.module\").then(mod => mod.AdminModule),\r\n    canActivate: [AuthenticationGuard],\r\n    data: { claimType: ApplicationClaimType.CanViewAdminPage, title: \"Admin\" }\r\n  },\r\n  { path: \"**\", redirectTo: \"/blog\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport {\r\n  ApplicationClaimType,\r\n  ApplicationUserModel,\r\n  SecurityService\r\n} from \"@core/security\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\nexport class AppComponent {\r\n  public title = \"MT\";\r\n  public isCollapsed = true;\r\n  public applicationUser: ApplicationUserModel;\r\n\r\n  public ApplicationClaimType = ApplicationClaimType;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private securityService: SecurityService\r\n  ) {\r\n    this.applicationUser = securityService.applicationUser;\r\n  }\r\n\r\n  public logout(event: MouseEvent) {\r\n    this.securityService.logout();\r\n    this.router.navigate([\"/\"]);\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  public toggleNavigationBar() {\r\n    this.isCollapsed = !this.isCollapsed;\r\n  }\r\n\r\n  public collapseNavigationBar() {\r\n    this.isCollapsed = true;\r\n  }\r\n}\r\n","<header class=\"sticky-top bg-dark\">\r\n  <div class=\"container\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark\">\r\n      <a class=\"navbar-brand\" routerLink=\"/blog\">{{ title }}</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        (click)=\"toggleNavigationBar()\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        [attr.aria-expanded]=\"!isCollapsed\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        class=\"collapse navbar-collapse justify-content-center\"\r\n        id=\"navbarNavAltMarkup\"\r\n        [ngbCollapse]=\"isCollapsed\"\r\n      >\r\n        <div class=\"navbar-nav\">\r\n          <a\r\n            class=\"nav-item nav-link\"\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/blog\"\r\n            (click)=\"collapseNavigationBar()\"\r\n            >Blog</a\r\n          >\r\n        </div>\r\n        <div class=\"navbar-nav ml-auto\">\r\n          <a\r\n            *appHasClaim=\"ApplicationClaimType.CanViewAdminPage\"\r\n            class=\"nav-item nav-link\"\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/admin\"\r\n            (click)=\"collapseNavigationBar()\"\r\n            >Admin</a\r\n          >\r\n          <a\r\n            *ngIf=\"!applicationUser.isAuthenticated\"\r\n            class=\"nav-item nav-link\"\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/login\"\r\n            (click)=\"collapseNavigationBar()\"\r\n            >Login</a\r\n          >\r\n          <a\r\n            *ngIf=\"applicationUser.isAuthenticated\"\r\n            class=\"nav-item nav-link\"\r\n            href=\"logout\"\r\n            (click)=\"logout($event); collapseNavigationBar()\"\r\n            >Logout</a\r\n          >\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</header>\r\n\r\n<main class=\"container mt-3\">\r\n  <router-outlet></router-outlet>\r\n</main>\r\n\r\n<app-toasts-container></app-toasts-container>\r\n","import { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\r\nimport { APP_INITIALIZER, NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { JsonDateHttpInterceptor } from \"@core/interceptors/json-date-http-interceptor\";\r\nimport {\r\n  JwtInterceptor,\r\n  SecurityService,\r\n  UnauthorizedErrorInterceptor\r\n} from \"@core/security\";\r\nimport { ToastsContainerComponent } from \"@core/toast\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HasClaimDirective } from \"./core/security/directives/has-claim.directive\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, ToastsContainerComponent, HasClaimDirective],\r\n  imports: [NgbModule, BrowserModule, AppRoutingModule, HttpClientModule],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: loadCurrentUser,\r\n      deps: [SecurityService],\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JsonDateHttpInterceptor,\r\n      multi: true\r\n    },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: UnauthorizedErrorInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n\r\nexport function loadCurrentUser(securityService: SecurityService) {\r\n  return () => securityService.restoreSession();\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"@environments/environment\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\nexport abstract class ApiService {\r\n  protected actionUrl: string;\r\n\r\n  constructor(private http: HttpClient, actionUrl: string) {\r\n    this.actionUrl = `${environment.apiUrl}/${actionUrl}`;\r\n    this.validateApiUrl(this.actionUrl);\r\n  }\r\n\r\n  protected get<T>(alternativeUrl: string = null): Observable<T> {\r\n    if (alternativeUrl) {\r\n      this.validateApiUrl(alternativeUrl);\r\n    }\r\n\r\n    let url = this.actionUrl;\r\n    if (alternativeUrl) {\r\n      url += alternativeUrl;\r\n    }\r\n\r\n    return this.http.get<T>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  protected post<T>(model: any, alternativeUrl: string = null): Observable<T> {\r\n    if (alternativeUrl) {\r\n      this.validateApiUrl(alternativeUrl);\r\n    }\r\n\r\n    let url = this.actionUrl;\r\n    if (alternativeUrl) {\r\n      url += alternativeUrl;\r\n    }\r\n\r\n    return this.http.post<T>(url, model).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  protected put(model: any, alternativeUrl: string = null): Observable<never> {\r\n    if (alternativeUrl) {\r\n      this.validateApiUrl(alternativeUrl);\r\n    }\r\n\r\n    let url = this.actionUrl;\r\n    if (alternativeUrl) {\r\n      url += alternativeUrl;\r\n    }\r\n\r\n    return this.http.put<never>(url, model).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  protected delete(alternativeUrl: string = null): Observable<never> {\r\n    if (alternativeUrl) {\r\n      this.validateApiUrl(alternativeUrl);\r\n    }\r\n\r\n    let url = this.actionUrl;\r\n    if (alternativeUrl) {\r\n      url += alternativeUrl;\r\n    }\r\n\r\n    return this.http.delete<never>(url).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private validateApiUrl(url: string): void {\r\n    if (url.endsWith(\"/\")) {\r\n      throw new Error(\"API url may not end with '/'\");\r\n    }\r\n  }\r\n\r\n  private handleError(error: any): Observable<never> {\r\n    let errorMessage = \"Server error\";\r\n    if (error) {\r\n      if (error.message) {\r\n        errorMessage = error.message;\r\n      } else if (error.status) {\r\n        errorMessage = `${error.status} - ${error.statusText}`;\r\n      }\r\n    }\r\n\r\n    // tslint:disable-next-line: no-console\r\n    console.error(errorMessage);\r\n    return throwError(error);\r\n  }\r\n}\r\n","export * from \"./api-service\";\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class JsonDateHttpInterceptor implements HttpInterceptor {\r\n  private iso8601: RegExp = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/;\r\n\r\n  public intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      tap((event: HttpEvent<any>) => {\r\n        if (event instanceof HttpResponse) {\r\n          this.convertToDate(event.body);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  public convertToDate(body: any) {\r\n    // Ability to configure HttpClient JSON.parse reviver would be nice\r\n    if (body === null || body === undefined || typeof body !== \"object\") {\r\n      return body;\r\n    }\r\n\r\n    for (const key of Object.keys(body)) {\r\n      const value = body[key];\r\n      if (!value) {\r\n        continue;\r\n      } else if (typeof value === \"object\") {\r\n        this.convertToDate(value);\r\n      } else if (typeof value === \"string\" && this.iso8601.test(value)) {\r\n        body[key] = new Date(value);\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class LocalStorageKeys {\r\n  public static readonly AccessToken = \"website_access_token\";\r\n  public static readonly AuthenticationType = \"website_authentication_type\";\r\n}\r\n","export * from \"./local-storage.service\";\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class LocalStorageService {\r\n  private static readonly userKeysKey: string = \"UserKeys\";\r\n\r\n  private readonly userKeys: string[];\r\n\r\n  constructor() {\r\n    this.userKeys = this._getItem<string[]>(LocalStorageService.userKeysKey);\r\n    if (!this.userKeys) {\r\n      this.userKeys = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve value from local storage\r\n   * Will return null if there is no value\r\n   */\r\n  public getItem<T>(key: string): T {\r\n    return this._getItem<T>(key);\r\n  }\r\n\r\n  /**\r\n   * Add value to local storage\r\n   */\r\n  public setItem(key: string, value: any) {\r\n    this._setItem(key, value);\r\n  }\r\n\r\n  /**\r\n   * Remove item from local storage\r\n   */\r\n  public removeItem(key: string) {\r\n    const userKeyIndex = this.userKeys.indexOf(key);\r\n    if (userKeyIndex >= 0) {\r\n      this.userKeys.splice(userKeyIndex, 1);\r\n      this._storeUserKeys();\r\n    }\r\n\r\n    this._removeItem(key);\r\n  }\r\n\r\n  /**\r\n   * Add user item to local storage\r\n   * User items will be cleared when another user uses the same browser cache\r\n   */\r\n  public setUserItem(key: string, value: any) {\r\n    if (this.userKeys.indexOf(key) < 0) {\r\n      this.userKeys.push(key);\r\n      this._storeUserKeys();\r\n    }\r\n\r\n    this._setItem(key, value);\r\n  }\r\n\r\n  /**\r\n   * Clears all stored user items\r\n   */\r\n  public clearUserItems() {\r\n    while (this.userKeys.length > 0) {\r\n      const key = this.userKeys.pop();\r\n      this._removeItem(key);\r\n    }\r\n\r\n    this._storeUserKeys();\r\n  }\r\n\r\n  private _getItem<T>(key: string): T {\r\n    const value = localStorage.getItem(key);\r\n\r\n    return value ? JSON.parse(value) : null;\r\n  }\r\n\r\n  private _setItem(key: string, value: any) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  private _removeItem(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  private _storeUserKeys() {\r\n    this._setItem(LocalStorageService.userKeysKey, this.userKeys);\r\n  }\r\n}\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\r\nimport { ApplicationClaimType } from \"../enums/application-claim-type.enum\";\r\nimport { SecurityService } from \"../services/security.service\";\r\n\r\n@Directive({\r\n  selector: \"[appHasClaim]\"\r\n})\r\nexport class HasClaimDirective {\r\n  private claimTypes: ApplicationClaimType[];\r\n\r\n  @Input()\r\n  public set appHasClaim(\r\n    claimType: ApplicationClaimType | ApplicationClaimType[]\r\n  ) {\r\n    this.claimTypes = Array.isArray(claimType) ? claimType : [claimType];\r\n    this.validateClaim();\r\n  }\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef,\r\n    private securityService: SecurityService\r\n  ) {\r\n    securityService.applicationUserChanged.subscribe(() =>\r\n      this.validateClaim()\r\n    );\r\n  }\r\n\r\n  private validateClaim() {\r\n    if (this.securityService.hasClaim(this.claimTypes)) {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n}\r\n","export enum ApplicationClaimType {\r\n  CanViewAdminPage = 1,\r\n  CanAddBlogPost,\r\n  CanUpdateBlogPost,\r\n  CanDeleteBlogPost\r\n}\r\n","export enum AuthenticationType {\r\n  Default,\r\n  AzureAd\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from \"@angular/router\";\r\nimport { ToastService } from \"@core/toast\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SecurityService } from \"../services/security.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private securityService: SecurityService,\r\n    private toastService: ToastService\r\n  ) {}\r\n\r\n  public canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    const claimType = next.data.claimType;\r\n\r\n    const applicationUser = this.securityService.applicationUser;\r\n    if (\r\n      applicationUser.isAuthenticated &&\r\n      (!claimType || this.securityService.hasClaim(claimType))\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    if (applicationUser.isAuthenticated) {\r\n      this.toastService.showWarning(\"Not authorized to view this page!\");\r\n    } else {\r\n      this.router.navigate([\"/login\"], {\r\n        queryParams: { returnUrl: state.url }\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","export * from \"./enums/application-claim-type.enum\";\r\nexport * from \"./guards/authentication.guard\";\r\nexport * from \"./interceptors/jwt.interceptor\";\r\nexport * from \"./interceptors/unauthorized-error.interceptor\";\r\nexport * from \"./models/application-user.model\";\r\nexport * from \"./models/user-credentials.model\";\r\nexport * from \"./services/security.service\";\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SecurityService } from \"../services/security.service\";\r\n\r\n/**\r\n * Add authorization header with jwt token if available\r\n */\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private securityService: SecurityService) {}\r\n\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const accessToken = this.securityService.getAccessToken();\r\n    if (accessToken) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${accessToken}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { SecurityService } from \"../services/security.service\";\r\n\r\n/**\r\n * Logout if 401 response returned from API\r\n */\r\n@Injectable()\r\nexport class UnauthorizedErrorInterceptor implements HttpInterceptor {\r\n  constructor(private securityService: SecurityService) {}\r\n\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError(err => {\r\n        if (err.status === 401) {\r\n          this.securityService.logout();\r\n          location.reload();\r\n        }\r\n\r\n        let error: string;\r\n        if (err.error && err.error.message) {\r\n          error = err.error.message;\r\n        } else {\r\n          error = err.statusText;\r\n        }\r\n\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { ApplicationClaimType } from \"../enums/application-claim-type.enum\";\r\n\r\nexport class ApplicationUserModel {\r\n  public isAuthenticated = false;\r\n  public bearerToken: string = null;\r\n\r\n  public userName: string = null;\r\n  public firstName: string = null;\r\n  public lastName: string = null;\r\n  public email: string = null;\r\n\r\n  public claims: ApplicationClaimType[] = [];\r\n}\r\n","export class UserCredentialsModel {\r\n  public email: string;\r\n  public password: string;\r\n  public recaptcha: string;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"@environments/environment\";\r\nimport {\r\n  User,\r\n  UserManager,\r\n  UserManagerSettings,\r\n  WebStorageStateStore\r\n} from \"oidc-client\";\r\nimport { ExternalAuthentication } from \"../interfaces/external-authentication\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AzureAdAuthenticationService implements ExternalAuthentication {\r\n  private userManager: UserManager;\r\n  private userPromise: Promise<User>;\r\n  private user: User;\r\n\r\n  constructor() {\r\n    if (!environment.azureAdSettings.enabled) {\r\n      return;\r\n    }\r\n\r\n    const azureAdSettings = environment.azureAdSettings;\r\n    const config: UserManagerSettings = {\r\n      authority: `https://sts.windows.net/${azureAdSettings.tenantId}`,\r\n      client_id: azureAdSettings.clientId,\r\n      redirect_uri: `${environment.clientUrl}/assets/oidc-login-redirect.html`,\r\n      scope: `openid api://${azureAdSettings.webApiId}/api-access profile`,\r\n      response_type: \"id_token token\",\r\n      post_logout_redirect_uri: environment.clientUrl,\r\n      extraQueryParams: { resource: azureAdSettings.webApiId },\r\n      loadUserInfo: false,\r\n      userStore: new WebStorageStateStore({ store: window.localStorage })\r\n    };\r\n\r\n    this.userManager = new UserManager(config);\r\n    this.userPromise = this.loadUser();\r\n\r\n    this.userManager.events.addUserLoaded(args => {\r\n      this.loadUser();\r\n    });\r\n  }\r\n\r\n  public awaitInitialization(): Promise<any> {\r\n    return this.userPromise;\r\n  }\r\n\r\n  public login(): Promise<User> {\r\n    return this.userManager.signinPopup();\r\n  }\r\n\r\n  public logout(): Promise<any> {\r\n    return this.userManager.signoutRedirect();\r\n  }\r\n\r\n  public getAccessToken(): string {\r\n    return this.user ? this.user.access_token : null;\r\n  }\r\n\r\n  private async loadUser(): Promise<User> {\r\n    return this.userManager.getUser().then(user => {\r\n      if (user && !user.expired) {\r\n        this.user = user;\r\n      }\r\n\r\n      return user;\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { ApiService } from \"@core/abstraction\";\r\nimport { LocalStorageService } from \"@core/local-storage\";\r\nimport { LocalStorageKeys } from \"@core/local-storage-keys\";\r\nimport { environment } from \"@environments/environment.prod\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { ApplicationClaimType } from \"../enums/application-claim-type.enum\";\r\nimport { AuthenticationType } from \"../enums/authentication-type.enum\";\r\nimport { ExternalAuthentication } from \"../interfaces/external-authentication\";\r\nimport { ApplicationUserModel } from \"../models/application-user.model\";\r\nimport { UserCredentialsModel } from \"../models/user-credentials.model\";\r\nimport { AzureAdAuthenticationService } from \"./azure-ad-authentication.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class SecurityService extends ApiService {\r\n  public applicationUser = new ApplicationUserModel();\r\n  public applicationUserChanged = new EventEmitter<ApplicationUserModel>();\r\n\r\n  constructor(\r\n    http: HttpClient,\r\n    private localStorage: LocalStorageService,\r\n    private azureAdAuthenticationService: AzureAdAuthenticationService\r\n  ) {\r\n    super(http, \"users\");\r\n  }\r\n\r\n  public login(\r\n    userCredentials: UserCredentialsModel\r\n  ): Observable<ApplicationUserModel> {\r\n    this.setAuthenticationType(AuthenticationType.Default);\r\n    return this.post<ApplicationUserModel>(\r\n      userCredentials,\r\n      \"/authenticate\"\r\n    ).pipe(\r\n      map(user => {\r\n        this.localStorage.setUserItem(\r\n          LocalStorageKeys.AccessToken,\r\n          user.bearerToken\r\n        );\r\n        this.updateUser(user);\r\n\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  public externalLogin(authenticationType: AuthenticationType): Promise<any> {\r\n    this.setAuthenticationType(authenticationType);\r\n    const authenticationService = this.getExternalAuthentication();\r\n    if (authenticationService) {\r\n      return authenticationService.login().then(() => {\r\n        this.loadCurrentUser();\r\n      });\r\n    }\r\n  }\r\n\r\n  public logout() {\r\n    const authenticationService = this.getExternalAuthentication();\r\n    if (authenticationService) {\r\n      authenticationService.logout();\r\n    }\r\n\r\n    this.localStorage.clearUserItems();\r\n    this.updateUser(new ApplicationUserModel());\r\n  }\r\n\r\n  public hasClaim(claim: ApplicationClaimType | ApplicationClaimType[]) {\r\n    if (Array.isArray(claim)) {\r\n      return this.applicationUser.claims.some(c => claim.includes(c));\r\n    } else {\r\n      return this.applicationUser.claims.includes(claim);\r\n    }\r\n  }\r\n\r\n  public async restoreSession(): Promise<ApplicationUserModel> {\r\n    let accessToken = null;\r\n\r\n    const authenticationService = this.getExternalAuthentication();\r\n    if (authenticationService) {\r\n      await authenticationService.awaitInitialization();\r\n      accessToken = authenticationService.getAccessToken();\r\n    } else {\r\n      accessToken = this.getAccessToken();\r\n    }\r\n\r\n    if (!accessToken) {\r\n      return of(null).toPromise();\r\n    }\r\n\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  public getAccessToken(): string {\r\n    const authenticationService = this.getExternalAuthentication();\r\n    if (authenticationService) {\r\n      return authenticationService.getAccessToken();\r\n    }\r\n\r\n    return this.applicationUser.bearerToken\r\n      ? this.applicationUser.bearerToken\r\n      : this.localStorage.getItem(LocalStorageKeys.AccessToken);\r\n  }\r\n\r\n  private updateUser(applicationUser: ApplicationUserModel) {\r\n    Object.assign(this.applicationUser, applicationUser);\r\n    this.applicationUserChanged.emit(this.applicationUser);\r\n  }\r\n\r\n  private loadCurrentUser(): Promise<ApplicationUserModel> {\r\n    return this.get<ApplicationUserModel>(\"/current\")\r\n      .pipe(\r\n        map(applicationUser => {\r\n          if (applicationUser) {\r\n            this.updateUser(applicationUser);\r\n          } else {\r\n            this.logout();\r\n          }\r\n\r\n          return this.applicationUser;\r\n        })\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  private getExternalAuthentication(): ExternalAuthentication {\r\n    const authenticationType = this.getAuthenticationType();\r\n    switch (authenticationType) {\r\n      case AuthenticationType.AzureAd: {\r\n        return environment.azureAdSettings.enabled\r\n          ? this.azureAdAuthenticationService\r\n          : null;\r\n      }\r\n      default: {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  private getAuthenticationType(): AuthenticationType {\r\n    let authenticationType = this.localStorage.getItem<AuthenticationType>(\r\n      LocalStorageKeys.AuthenticationType\r\n    );\r\n    if (!authenticationType) {\r\n      authenticationType = AuthenticationType.Default;\r\n    }\r\n\r\n    return authenticationType;\r\n  }\r\n\r\n  private setAuthenticationType(authenticationType: AuthenticationType) {\r\n    this.localStorage.setUserItem(\r\n      LocalStorageKeys.AuthenticationType,\r\n      authenticationType\r\n    );\r\n  }\r\n}\r\n","export * from \"./toast.service\";\r\nexport * from \"./toasts-container.component\";\r\n","import { Injectable, TemplateRef } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ToastService {\r\n  public toasts: any[] = [];\r\n\r\n  public show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.showToast(textOrTpl, options);\r\n  }\r\n\r\n  public showSuccess(message: string) {\r\n    this.showToast(message, { classname: \"bg-success text-light\" });\r\n  }\r\n\r\n  public showWarning(message: string) {\r\n    this.showToast(message, { classname: \"bg-warning text-dark\" });\r\n  }\r\n\r\n  public showError(message: string) {\r\n    this.showToast(message, { classname: \"bg-danger text-light\" });\r\n  }\r\n\r\n  public remove(toast: any) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n\r\n  private showToast(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.toasts.push({ textOrTpl, autoHide: true, ...options });\r\n  }\r\n}\r\n","import { Component, TemplateRef } from \"@angular/core\";\r\nimport { ToastService } from \"./toast.service\";\r\n\r\n@Component({\r\n  selector: \"app-toasts-container\",\r\n  template: `\r\n    <div class=\"ngb-toasts\" style=\"margin-top: 70px;\">\r\n      <ngb-toast\r\n        *ngFor=\"let toast of toastService.toasts\"\r\n        [class]=\"toast.classname\"\r\n        style=\"cursor: pointer;\"\r\n        [autohide]=\"toast.autoHide\"\r\n        (mouseenter)=\"toast.autoHide = false\"\r\n        (mouseleave)=\"toast.autoHide = true\"\r\n        (click)=\"toast.autoHide = false; toastService.remove(toast)\"\r\n        [delay]=\"toast.delay || 5000\"\r\n        (hide)=\"toastService.remove(toast)\"\r\n      >\r\n        <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\r\n          <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\r\n        </ng-template>\r\n\r\n        <ng-template #text>{{ toast.textOrTpl }}</ng-template>\r\n      </ngb-toast>\r\n    </div>\r\n  `\r\n})\r\nexport class ToastsContainerComponent {\r\n  constructor(public toastService: ToastService) {}\r\n\r\n  public isTemplate(toast: any) {\r\n    return toast.textOrTpl instanceof TemplateRef;\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  clientUrl: \"https://martijnturnhout.com\",\r\n  apiUrl: \"/api\",\r\n  recaptchaSiteKey: \"6LeOaq0UAAAAAFm6THEVZTNUk6MU76mVA59F9Yj_\",\r\n  azureAdSettings: {\r\n    enabled: true,\r\n    tenantId: \"bfc60a20-4601-4b3b-aa55-2ba676b14976\",\r\n    clientId: \"ba0156a1-daaa-4b6d-990a-a73283a95a4a\",\r\n    webApiId: \"0be261fe-0e96-4163-b07d-fbac0059c339\"\r\n  },\r\n  applicationInsights: {\r\n    instrumentationKey: \"850af97e-3c89-4da4-aee3-79bfa6cb9a8c\"\r\n  }\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  clientUrl: \"http://localhost:4200\",\r\n  apiUrl: \"/api\",\r\n  recaptchaSiteKey: \"6LdLprcUAAAAABxlfA223kbR2lhoAqTKKXyDjMdS\",\r\n  azureAdSettings: {\r\n    enabled: true,\r\n    // Directory id\r\n    tenantId: \"bfc60a20-4601-4b3b-aa55-2ba676b14976\",\r\n    // App registration id of client\r\n    clientId: \"ba0156a1-daaa-4b6d-990a-a73283a95a4a\",\r\n    // App registration id of web api\r\n    webApiId: \"0be261fe-0e96-4163-b07d-fbac0059c339\"\r\n  },\r\n  applicationInsights: {\r\n    instrumentationKey: \"850af97e-3c89-4da4-aee3-79bfa6cb9a8c\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => {\r\n    // tslint:disable-next-line: no-console\r\n    console.error(err);\r\n  });\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}